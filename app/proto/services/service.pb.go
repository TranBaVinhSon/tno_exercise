// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package services // import "github.com/tnakade/tno_exercise/app/proto/services"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetBalanceRequest struct {
	UserId               uint64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceRequest) Reset()         { *m = GetBalanceRequest{} }
func (m *GetBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetBalanceRequest) ProtoMessage()    {}
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ccb8a3739cf29451, []int{0}
}
func (m *GetBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceRequest.Unmarshal(m, b)
}
func (m *GetBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceRequest.Marshal(b, m, deterministic)
}
func (dst *GetBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceRequest.Merge(dst, src)
}
func (m *GetBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetBalanceRequest.Size(m)
}
func (m *GetBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceRequest proto.InternalMessageInfo

func (m *GetBalanceRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetBalanceResponse struct {
	Balance              string   `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceResponse) Reset()         { *m = GetBalanceResponse{} }
func (m *GetBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetBalanceResponse) ProtoMessage()    {}
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ccb8a3739cf29451, []int{1}
}
func (m *GetBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceResponse.Unmarshal(m, b)
}
func (m *GetBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceResponse.Marshal(b, m, deterministic)
}
func (dst *GetBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceResponse.Merge(dst, src)
}
func (m *GetBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetBalanceResponse.Size(m)
}
func (m *GetBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceResponse proto.InternalMessageInfo

func (m *GetBalanceResponse) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

type SendCoinRequest struct {
	FromUserId           uint64   `protobuf:"varint,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId             uint64   `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCoinRequest) Reset()         { *m = SendCoinRequest{} }
func (m *SendCoinRequest) String() string { return proto.CompactTextString(m) }
func (*SendCoinRequest) ProtoMessage()    {}
func (*SendCoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ccb8a3739cf29451, []int{2}
}
func (m *SendCoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCoinRequest.Unmarshal(m, b)
}
func (m *SendCoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCoinRequest.Marshal(b, m, deterministic)
}
func (dst *SendCoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCoinRequest.Merge(dst, src)
}
func (m *SendCoinRequest) XXX_Size() int {
	return xxx_messageInfo_SendCoinRequest.Size(m)
}
func (m *SendCoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendCoinRequest proto.InternalMessageInfo

func (m *SendCoinRequest) GetFromUserId() uint64 {
	if m != nil {
		return m.FromUserId
	}
	return 0
}

func (m *SendCoinRequest) GetToUserId() uint64 {
	if m != nil {
		return m.ToUserId
	}
	return 0
}

func (m *SendCoinRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type SendCoinResponse struct {
	ChainHash            string   `protobuf:"bytes,1,opt,name=chain_hash,json=chainHash,proto3" json:"chain_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCoinResponse) Reset()         { *m = SendCoinResponse{} }
func (m *SendCoinResponse) String() string { return proto.CompactTextString(m) }
func (*SendCoinResponse) ProtoMessage()    {}
func (*SendCoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ccb8a3739cf29451, []int{3}
}
func (m *SendCoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCoinResponse.Unmarshal(m, b)
}
func (m *SendCoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCoinResponse.Marshal(b, m, deterministic)
}
func (dst *SendCoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCoinResponse.Merge(dst, src)
}
func (m *SendCoinResponse) XXX_Size() int {
	return xxx_messageInfo_SendCoinResponse.Size(m)
}
func (m *SendCoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendCoinResponse proto.InternalMessageInfo

func (m *SendCoinResponse) GetChainHash() string {
	if m != nil {
		return m.ChainHash
	}
	return ""
}

func init() {
	proto.RegisterType((*GetBalanceRequest)(nil), "services.GetBalanceRequest")
	proto.RegisterType((*GetBalanceResponse)(nil), "services.GetBalanceResponse")
	proto.RegisterType((*SendCoinRequest)(nil), "services.SendCoinRequest")
	proto.RegisterType((*SendCoinResponse)(nil), "services.SendCoinResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WalletClient is the client API for Wallet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletClient interface {
	// ログイン情報取得
	GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
	SendCoin(ctx context.Context, in *SendCoinRequest, opts ...grpc.CallOption) (*SendCoinResponse, error)
}

type walletClient struct {
	cc *grpc.ClientConn
}

func NewWalletClient(cc *grpc.ClientConn) WalletClient {
	return &walletClient{cc}
}

func (c *walletClient) GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	out := new(GetBalanceResponse)
	err := c.cc.Invoke(ctx, "/services.Wallet/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) SendCoin(ctx context.Context, in *SendCoinRequest, opts ...grpc.CallOption) (*SendCoinResponse, error) {
	out := new(SendCoinResponse)
	err := c.cc.Invoke(ctx, "/services.Wallet/SendCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServer is the server API for Wallet service.
type WalletServer interface {
	// ログイン情報取得
	GetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error)
	SendCoin(context.Context, *SendCoinRequest) (*SendCoinResponse, error)
}

func RegisterWalletServer(s *grpc.Server, srv WalletServer) {
	s.RegisterService(&_Wallet_serviceDesc, srv)
}

func _Wallet_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.Wallet/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_SendCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).SendCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.Wallet/SendCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).SendCoin(ctx, req.(*SendCoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.Wallet",
	HandlerType: (*WalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _Wallet_GetBalance_Handler,
		},
		{
			MethodName: "SendCoin",
			Handler:    _Wallet_SendCoin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_ccb8a3739cf29451) }

var fileDescriptor_service_ccb8a3739cf29451 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x4d, 0x4f, 0x83, 0x40,
	0x14, 0x14, 0x35, 0x94, 0xbe, 0x68, 0xd4, 0x3d, 0x28, 0x62, 0x4d, 0x1a, 0x4e, 0x1e, 0x0c, 0xc4,
	0xea, 0x2f, 0x68, 0x0f, 0xda, 0x2b, 0xc6, 0x98, 0x78, 0x21, 0x0b, 0x3c, 0x65, 0x23, 0xec, 0x22,
	0xfb, 0x30, 0xfe, 0x14, 0x7f, 0xae, 0xe9, 0x96, 0x15, 0x3f, 0x7a, 0x9c, 0x37, 0x93, 0x99, 0xd9,
	0x59, 0xd8, 0xd7, 0xd8, 0xbe, 0x8b, 0x1c, 0xa3, 0xa6, 0x55, 0xa4, 0x98, 0xd7, 0x43, 0x1d, 0x5e,
	0xc2, 0xd1, 0x2d, 0xd2, 0x9c, 0x57, 0x5c, 0xe6, 0x98, 0xe0, 0x5b, 0x87, 0x9a, 0xd8, 0x09, 0x8c,
	0x3a, 0x8d, 0x6d, 0x2a, 0x0a, 0xdf, 0x99, 0x3a, 0x17, 0xbb, 0x89, 0xbb, 0x82, 0xcb, 0x22, 0x8c,
	0x80, 0xfd, 0x54, 0xeb, 0x46, 0x49, 0x8d, 0xcc, 0x87, 0x51, 0xb6, 0x3e, 0x19, 0xf9, 0x38, 0xb1,
	0x30, 0x14, 0x70, 0x70, 0x8f, 0xb2, 0x58, 0x28, 0x21, 0xad, 0xf7, 0x14, 0xf6, 0x9e, 0x5b, 0x55,
	0xa7, 0xbf, 0x03, 0x60, 0x75, 0x7b, 0x30, 0x21, 0x6c, 0x02, 0x40, 0xea, 0x9b, 0xdf, 0x36, 0xbc,
	0x47, 0xaa, 0x67, 0x8f, 0xc1, 0xe5, 0xb5, 0xea, 0x24, 0xf9, 0x3b, 0x26, 0xab, 0x47, 0xe1, 0x15,
	0x1c, 0x0e, 0x51, 0x7d, 0xb1, 0x73, 0x80, 0xbc, 0xe4, 0x42, 0xa6, 0x25, 0xd7, 0x65, 0xdf, 0x6d,
	0x6c, 0x2e, 0x77, 0x5c, 0x97, 0xb3, 0x4f, 0x07, 0xdc, 0x47, 0x5e, 0x55, 0x48, 0x6c, 0x09, 0x30,
	0x3c, 0x8c, 0x9d, 0x45, 0x76, 0x9f, 0xe8, 0xdf, 0x38, 0xc1, 0x64, 0x33, 0xb9, 0x8e, 0x0c, 0xb7,
	0xd8, 0x02, 0x3c, 0x5b, 0x84, 0x9d, 0x0e, 0xda, 0x3f, 0x3b, 0x04, 0xc1, 0x26, 0xca, 0x9a, 0xcc,
	0x6f, 0x9e, 0x66, 0x2f, 0x82, 0xca, 0x2e, 0x8b, 0x72, 0x55, 0xc7, 0x24, 0xf9, 0x2b, 0x2f, 0x30,
	0x26, 0xa9, 0x52, 0xfc, 0xc0, 0x36, 0x17, 0x1a, 0x63, 0xde, 0x34, 0xb1, 0xf9, 0xcd, 0xd8, 0x1a,
	0x65, 0xae, 0xc1, 0xd7, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x68, 0x8f, 0x68, 0x2e, 0xee, 0x01,
	0x00, 0x00,
}
